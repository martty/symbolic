Symbolic math for ruby with backend support to do the heavy-lifting.

== Introduction

== Basic tutorial

Symbolic tutorial at http://brainopia.github.com/symbolic/

== Backend use

# you can obtain the available backends by calling
Symbolic::Backends.get_backends

# choose a backend
Symbolic::Backends.use_backend('Maxima')
# you can switch backends any time

# now you can perform advanced operations provided by the chosen backend

# sample function
x = var :name => 'x'
f = 2*x + 5

F = f.indefinite_integral('x') #indefinite_integral is provided by the maxima backend
p F
#=> Symbolic(x**2+5*x)

== Creating your own backend

- create a file yourbackend.rb in backends/
- automatic loading soon...
- create a class that inherits Symbolic::Backends::Backend and is in the namespace Symbolic::Backends
- override on_load and on_unload if you need state support
- add any function which can be called on the expressions, the first argument is the expression itself

== Maxima backend

Supported functions:
-indefinite_integral, definite_integral
-laplace, inverse_laplace

== Original author

brainopia (ravwar at gmail.com).

I am ready to help with any questions related to Symbolic.
I welcome any contribution.
